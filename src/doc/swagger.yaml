openapi: 3.0.0
info:
  title: Event Management API
  version: 1.0.0
  description: API documentation for the Event Management System

servers:
  - url: /api/v1
    description: API v1

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        role:
          type: string
        organization:
          type: string
        profile:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
            phone:
              type: string

    Error:
      type: object
      properties:
        message:
          type: string
        status:
          type: integer

paths:
  /users/register:
    post:
      tags:
        - Users
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/login:
    post:
      tags:
        - Users
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid credentials

  /users/profile:
    get:
      tags:
        - Users
      summary: Get user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized

  /users/{id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

  /organizations:
    get:
      tags:
        - Organizations
      summary: Get all organizations
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    description:
                      type: string

  /venue:
    get:
      tags:
        - Venues
      summary: Get all venues
      responses:
        '200':
          description: List of venues
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    capacity:
                      type: integer
                    location:
                      type: string

  /event:
    get:
      tags:
        - Events
      summary: Get all events
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of events
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
                    description:
                      type: string
                    startDate:
                      type: string
                      format: date-time
                    endDate:
                      type: string
                      format: date-time

  /event-bookings:
    post:
      tags:
        - Event Bookings
      summary: Create a new event booking
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventId:
                  type: string
                venueId:
                  type: string
                startDate:
                  type: string
                  format: date-time
                endDate:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Booking created successfully
        '400':
          description: Invalid input

  /registrations:
    post:
      tags:
        - Registrations
      summary: Register for an event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventId:
                  type: string
                userId:
                  type: string
                ticketTypeId:
                  type: string
      responses:
        '201':
          description: Registration successful
        '400':
          description: Invalid input

  /tickets:
    get:
      tags:
        - Tickets
      summary: Get all ticket types
      responses:
        '200':
          description: List of ticket types
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number
                    description:
                      type: string
